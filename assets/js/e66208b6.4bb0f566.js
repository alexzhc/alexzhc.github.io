"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5601],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=c(n),h=r,d=u["".concat(s,".").concat(h)]||u[h]||m[h]||o;return n?a.createElement(d,l(l({ref:t},p),{},{components:n})):a.createElement(d,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=u;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4102:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return m}});var a=n(7462),r=n(3366),o=(n(7294),n(3905)),l=["components"],i={sidebar_position:2,sidebar_label:"Install by Helm Charts"},s="Install by Helm Charts",c={unversionedId:"02installation/01helm-chart",id:"02installation/01helm-chart",title:"Install by Helm Charts",description:"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts.",source:"@site/docs/02installation/01helm-chart.md",sourceDirName:"02installation",slug:"/02installation/01helm-chart",permalink:"/docs/02installation/01helm-chart",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/02installation/01helm-chart.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"Install by Helm Charts"},sidebar:"tutorialSidebar",previous:{title:"Prerequisites",permalink:"/docs/02installation/00prepare"},next:{title:"Install Independently",permalink:"/docs/02installation/02install"}},p={},m=[{value:"Step 1: Install HwameiStor",id:"step-1-install-hwameistor",level:2},{value:"Step 2: Enable HwameiStor on a node",id:"step-2-enable-hwameistor-on-a-node",level:2},{value:"Step 3: Claim disks by types on a node",id:"step-3-claim-disks-by-types-on-a-node",level:2}],u={toc:m};function h(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"install-by-helm-charts"},"Install by Helm Charts"),(0,o.kt)("p",null,"Local Storage is a component of HwameiStor and must work with Local Disk Manager module. It's suggested to install by helm-charts."),(0,o.kt)("p",null,"This functionality is in alpha and is subject to change. The code is provided as-is with no warranties. Alpha features are not subject to the support SLA of official GA features.  "),(0,o.kt)("p",null,"To install it by helm charts, perform the following procedure."),(0,o.kt)("h2",{id:"step-1-install-hwameistor"},"Step 1: Install HwameiStor"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/"},"Helm")," is required to use charts for installation. Refer to Helm's ",(0,o.kt)("a",{parentName:"p",href:"https://helm.sh/docs/"},"Documentation")," to get started."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ git clone https://github.com/hwameistor/helm-charts.git \n$ cd helm-charts/charts \n$ helm install hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,o.kt)("p",null,"Or"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"$ helm repo add hwameistor http://hwameistor.io/helm-charts \n$ helm install hwameistor/hwameistor -n hwameistor --create-namespace --generate-name\n")),(0,o.kt)("p",null,"Run ",(0,o.kt)("inlineCode",{parentName:"p"},"helm search repo hwameistor")," to check the charts."),(0,o.kt)("h2",{id:"step-2-enable-hwameistor-on-a-node"},"Step 2: Enable HwameiStor on a node"),(0,o.kt)("p",null,"Once the Helm charts are installed, you can enable HwameiStor on a specific node."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},'$ kubectl label node <node-name> "lvm.hwameistor.io/enable=true"\n')),(0,o.kt)("h2",{id:"step-3-claim-disks-by-types-on-a-node"},"Step 3: Claim disks by types on a node"),(0,o.kt)("p",null,"Then claim disks for your local-storage by applying LocalDiskClaim CR."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml"},"cat > ./local-disk-claim.yaml <<- EOF\napiVersion: hwameistor.io/v1alpha1\nkind: LocalDiskClaim\nmetadata:\n  name: <anyname>\n  namespace: hwameistor\nspec:\n  nodeName: <node-name>\n  description:\n    diskType: <HDD or SSD or NVMe>\nEOF\n")),(0,o.kt)("p",null,"Congratulations! HwameiStor is successfully deployed on your cluster now."))}h.isMDXComponent=!0}}]);